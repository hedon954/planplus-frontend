/**
 * @file drawLegend
 * @author yuanzhen
*/

import {
    measureText,
    drawRoundRect
} from './util';

// legend常量
// paddding 文字和图形之间的间距
// SHAPE_WIDTH 每个图形宽度
// MARGIN_TOP 举例图表的间距
const PADDING = 4;
const MARGIN_TOP = 12;
const SHAPE_WIDTH = 10;
const LEGEND_MARGIN = 20;

/**
 *
 * 获取lenged文字宽度
 *
 * @param {*} item lengedItem
 * @return {number}
 */
function getLegendItemWidth(item) {
    return SHAPE_WIDTH + PADDING + measureText(item.name || '');
}

/**
 *
 * 绘制lengedlist
 *
 * @param {*} legendList event.touches对象
 * @param {*} config series计算节点
 * @param {*} ctxAxis 坐标轴canvas执行上下文
 */
export function drawLegend(legendList, config, ctxAxis) {
    const {
        styleConfig: {
            colors,
            fontSize,
            fontColor,
            padding
        },
        canvasWidth,
        type
    } = config;
    let ctx = ctxAxis || config.ctxAxis;
    const widthList = [];
    legendList.forEach(item => {
        item.forEach((info, index) => {
            let textWidth = getLegendItemWidth(info);
            widthList[index] = Math.max(textWidth, widthList[index] || 0);
        });
    });
    ctx.setFontSize(fontSize);
    ctx.setTextAlign('left');
    legendList.forEach((item, id) => {
        let width = legendList[0].length * LEGEND_MARGIN;
        let allWidth = widthList.reduce((sum, info) => sum + info) + width + 2 * padding;
        allWidth = legendList.length === 1 && legendList[0].length === 1 ? widthList[0] + padding : allWidth;
        let startX = canvasWidth - allWidth;
        if (type === 'pie') {
            startX = (canvasWidth - allWidth) / 2;
        }
        let startY = padding + id * fontSize * 2;
        item.forEach((info, index) => {
            ctx.beginPath();
            drawRoundRect(
                ctx,
                {
                    x: startX,
                    y: startY,
                    w: 10,
                    h: 10,
                    r: 2,
                    color: colors[index + id * 3]
                }
            );
            ctx.fill();
            ctx.closePath();
            ctx.beginPath();
            ctx.setFillStyle(fontColor);
            startX += SHAPE_WIDTH + PADDING;
            ctx.fillText(info.name, startX, startY + 9);
            ctx.stroke();
            ctx.closePath();
            startX += LEGEND_MARGIN + widthList[index];
        });
    });
    if (type === 'pie') {
        ctx.draw('legend');
    }
}

/**
 *
 * 获取legend对象
 *
 * @param {*} config 用户配置
 * @return {Object} 返回lengendlist和lengend高度
 */
export function calLegendData(config) {
    if (!config.legend || !config.legend.show) {
        return {
            legendList: [],
            legendHeight: 0
        };
    }
    const {
        series,
        styleConfig: {
            fontSize
        }
    } = config;
    let legendList = [];
    for (let i = 0; i < series.length; i += 3) {
        legendList.push(series.slice(i, i + 3));
    }
    // todo by yuanzhen 如果3个lengeditem宽度超出canvasWidth，自适应
    // let totalWidth = 0;
    // let currentRow = [];
    // series.forEach(item => {
    //     let itemWidth = getLegendItemWidth(item);
    //     if (totalWidth + itemWidth > canvasWidth - yAxisWidth - legendPadding * 2) {
    //         legendList.push(currentRow);
    //         totalWidth = itemWidth;
    //         currentRow = [item];
    //     }
    //     else {
    //         totalWidth += itemWidth;
    //         currentRow.push(item);
    //     }
    // });
    // (currentRow.length) && legendList.push(currentRow);
    return {
        legendList,
        legendHeight: legendList.length * (fontSize + MARGIN_TOP) + PADDING
    };
}
